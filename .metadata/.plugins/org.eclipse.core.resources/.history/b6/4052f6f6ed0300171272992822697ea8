package squareAdapter;

import squareAdapterNew.NewSquarePeg;

/* Adapted example from: https://sourcemaking.com/design_patterns/adapter/java/2 */ 

//Design a "wrapper" class that can "impedance match" the old to the new
public class SquarePegAdapter  extends SquarePeg {
	   // The adapter/wrapper class "has a" instance of the legacy class
	   private SquarePeg sp;

	   public SquarePegAdapter(double w) {
		   super(w);
		   sp = new SquarePeg(w); 
	   }

	   // Identify the desired interface
	   public void makeFit(int r) {
	      // The adapter/wrapper class delegates to the legacy object
	      double amount = sp.getWidth() - r * Math.sqrt(2);
	      System.out.println( "reducing SquarePeg " + sp.getWidth() + " by " + ((amount < 0) ? 0 : amount) + " amount" );
	      if (amount > 0) {
	         sp.setWidth( sp.getWidth() - amount );
	         System.out.println( "   width is now " + sp.getWidth() );
	      }
	   }
}
